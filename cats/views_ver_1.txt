from rest_framework import status
from rest_framework.decorators import api_view
from rest_framework.response import Response

from .models import Cat
from .serializers import CatSerializer


@api_view(['GET', 'POST'])  # указали разрешённые методы
def cat_list(request):
    if request.method == 'POST':
        # Чтобы подключить сериализатор, нужно создать экземпляр класса CatSerializer 
        # и передать в него данные из тела POST-запроса. 
        # Данные в запросе приходят в формате JSON, преобразуются в Python-словарь, 
        # доступ к которому можно получить через объект request.data. 
        # Этот словарь и передаётся в сериализатор через именованный параметр data.
        serializer = CatSerializer(data=request.data, many=True)  # Чтобы сериализатор был готов принять список объектов, в конструктор сериализатора нужно передать именованный параметр many=True.
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
    # В случае GET-запроса возвращаем список всех котиков

    # При подготовке ответа view-функция должна получить из бд **** queryset ****
    # с запрошенными объектами модели (например, все объекты модели Cat). 
    cats = Cat.objects.all()
    # Чтобы сериализатор был готов принять список объектов,
    # в конструктор сериализатора нужно передать именованный параметр many=True.
    serializer = CatSerializer(cats, many=True)   #  Без параметра many=True в GET-запросе, вернётся ошибка AttributeError.
    return Response(serializer.data)


"""Для создания новой записи в сериализатор передаются только данные из запроса; объект будет создан при вызове метода save().
...
serializer = CatSerializer(data=request.data)
        Если вызвать serializer.save(), будет создана новая запись в БД 

Для обновления существующей записи первым параметром в сериализатор передаётся тот объект модели, который нужно обновить. 
В этом случае вызов save() не приведёт к созданию нового объекта.
...
cat= Cat.objects.get(id=id)
serializer = CatSerializer(cat, data=request.data)
        Если вызвать serializer.save(), будет обновлён существующий экземпляр Cat """